services:
  mysql:
    image: mysql:8.0 # 생성이미지:버전
    container_name: mysql # 생성 할 컨테이너 이름
    restart: always # 수동종료 전까지 항상 켜지도록 유지 (sleep 방지)
    ports:
      - "23306:3306" # 포트번호 host:docker 로컬 포트에 도커 포트를 마운트
    volumes:
      - ./db/mysql/data:/var/lib/mysql # 로컬저장경로:도커저장경로 / 컨테이너 종료 후에도 데이터를 로컬에 저장하여 유지 (로컬 경로변경 가능)
      - ./db/mysql/init:/docker-entrypoint-initdb.d # 로컬저장경로:도커저장경로 / 해당 경로에 작성된 DDL을 컨테이너 생성 시 자동실행 (.sql .sh 파일 실행) (로컬 경로변경 가능)
    environment: #===== 환경변수 =====#
      MYSQL_ROOT_PASSWORD: 1234 # root 계정 비밀번호 설정
      MYSQL_DATABASE: todo # 데이터베이스 생성 이름
      MYSQL_CHARSET: utf8mb4 # 인코딩 문자
      MYSQL_COLLATION: utf8mb4_unicode_ci # 대조 문자
      TZ: Asia/Seoul # 타임존 설정

  redis:
    image: redis:7.0
    container_name: redis
    restart: always
    ports:
      - "6379:6379" # Redis 기본 포트 [로컬:도커]
    volumes:
      - ./db/redis/data:/data # Redis 데이터 저장 경로 [로컬:도커]
    environment:
      TZ: Asia/Seoul



#============================================================================================#
# MySQL 추가 명령어

# 환경변수 추가 명령어
# MYSQL_DATABASE: ex # 데이터베이스 생성 이름
# MYSQL_CHARSET: utf8mb4 # 인코딩 문자
# MYSQL_COLLATION: utf8mb4_unicode_ci # 대조 문자

# MYSQL_DATABASE 명령어로 데이터베이스를 생성하면 아래 명령어로 생성한 유저는 해당 데이터베이스의 슈퍼유저가 됩니다.
# MYSQL_USER: user # 생성할 유저 이름
# MYSQL_PASSWORD: 1234 # 유저 비밀번호 (USER, PASSWORD 두가지 모두 명시해야함)

# TZ: Asia/Seoul # 타임존 설정

# restart 추가 명령어
# no: 수동으로 재시작 설정
# on-failure: 오류 발생 시 재시작
#============================================================================================#
# Redis 추가 명령어

# command: redis-server /usr/local/etc/redis/redis.conf 커스텀 설정 파일을 사용하여 Redis 서버 시작

# volumes:
#   - ./db/redis/redis.conf:/usr/local/etc/redis/redis.conf 로컬의 redis.conf 파일을 컨테이너 내의 설정 경로로 매핑
